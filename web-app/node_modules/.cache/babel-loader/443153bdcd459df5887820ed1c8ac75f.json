{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\The-Amazing-App\\\\web-app\\\\src\\\\Components\\\\Login\\\\SignUp.js\";\nimport React, { useState } from \"react\";\nimport { Button, Form, Grid, Message, Segment } from \"semantic-ui-react\";\nimport image from \"../../Assets/logo.png\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signup, signin, resetPassword } from \"../../store/actions/auth\";\nimport useForm from \"../../utils/useForm\";\nimport validate from \"../../utils/validateSignUpForm\";\n\nconst Login = ({\n  signup,\n  signin,\n  resetPassword,\n  authMsg,\n  history,\n  loading\n}) => {\n  const [newUser, setNewUser] = useState(false);\n  const [reset, SetReset] = useState(false);\n  const [credentials, handleChange, handleSubmit, errors] = useForm(login, validate, reset);\n\n  function login() {\n    // signin\n    console.log(credentials.email + \" \" + credentials.password + \" \" + credentials.username);\n    signup(credentials.email, credentials.password, credentials.username);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    textAlign: \"center\",\n    style: {\n      height: \"100vh\"\n    },\n    verticalAlign: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    style: {\n      maxWidth: 450\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    size: \"medium\",\n    onSubmit: handleSubmit,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    stacked: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: image,\n    style: {\n      width: 130,\n      height: 130,\n      alignSelf: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  })), authMsg && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"auth-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 27\n    }\n  }, authMsg), /*#__PURE__*/React.createElement(Form.Input, {\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    placeholder: \"Username\",\n    name: \"username\",\n    id: \"usersname\",\n    type: \"text\",\n    value: credentials.username,\n    onChange: handleChange,\n    className: errors.UsernameIsEmpty && \"input-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, errors.UsernameIsEmpty && /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 19\n    }\n  }, errors.UsernameIsEmpty)), /*#__PURE__*/React.createElement(Form.Input, {\n    fluid: true,\n    icon: \"envelope\",\n    type: \"email\",\n    name: \"email\",\n    iconPosition: \"left\",\n    placeholder: \"E-mail address\",\n    id: \"useremail\",\n    value: credentials.email,\n    onChange: handleChange,\n    className: (errors.emailIsEmpty || errors.emailFormatInvalid) && \"input-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, errors.emailIsEmpty && /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 41\n    }\n  }, errors.emailIsEmpty), errors.emailFormatInvalid && /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 19\n    }\n  }, errors.emailFormatInvalid)), !reset && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Input, {\n    fluid: true,\n    icon: \"lock\",\n    iconPosition: \"left\",\n    placeholder: \"Password\",\n    name: \"password\",\n    value: credentials.password,\n    type: \"password\",\n    id: \"userpassword\",\n    onChange: handleChange,\n    className: (errors.passIsStrong || errors.passIsEmpty) && \"input-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 19\n    }\n  }, errors.passIsStrong && /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 23\n    }\n  }, errors.passIsStrong), errors.passIsEmpty && /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 44\n    }\n  }, errors.passIsEmpty))), /*#__PURE__*/React.createElement(Button, {\n    fluid: true,\n    color: \"teal\",\n    size: \"medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(Message, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, \"Already have an account ? \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 43\n    }\n  }, \" Login\")))))));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    authMsg: state.authReducer.authMsg,\n    loading: state.apiStatusReducer.apiCallsInProgress > 0\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    signup: (email, password, username) => dispatch(signup(email, password, username)),\n    signin: (email, password, callback) => dispatch(signin(email, password, callback)),\n    resetPassword: email => dispatch(resetPassword(email))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n/*class SignUp extends React.Component {\r\n  state = { username: \"\", email: \"\", password: \"\", err: \"\" };\r\n\r\n  onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    const data = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n      email: this.state.email,\r\n    };\r\n\r\n    console.log(data);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Grid\r\n        textAlign=\"center\"\r\n        style={{ height: \"100vh\" }}\r\n        verticalAlign=\"middle\"\r\n      >\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <Form onSubmit={this.onFormSubmit} size=\"medium\">\r\n            <Segment stacked>\r\n              <div style={{ alignItems: \"center\" }}>\r\n                <img\r\n                  src={image}\r\n                  style={{ width: 130, height: 130, alignSelf: \"center\" }}\r\n                />\r\n              </div>\r\n              <Form.Input\r\n                fluid\r\n                icon=\"user\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"Username\"\r\n                id=\"usersname\"\r\n                onChange={(e) => this.setState({ username: e.target.value })}\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                icon=\"envelope\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"E-mail address\"\r\n                id=\"useremail\"\r\n                onChange={(e) => this.setState({ email: e.target.value })}\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                icon=\"lock\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                id=\"userpassword\"\r\n                onChange={(e) => this.setState({ password: e.target.value })}\r\n              />\r\n\r\n              <Button fluid color=\"teal\" size=\"medium\">\r\n                Register\r\n              </Button>\r\n              <Message>\r\n                Already have an account ? <Link to=\"/login\"> Login</Link>\r\n              </Message>\r\n            </Segment>\r\n          </Form>\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUp;*/","map":{"version":3,"sources":["C:/Users/User/Documents/GitHub/The-Amazing-App/web-app/src/Components/Login/SignUp.js"],"names":["React","useState","Button","Form","Grid","Message","Segment","image","Link","connect","signup","signin","resetPassword","useForm","validate","Login","authMsg","history","loading","newUser","setNewUser","reset","SetReset","credentials","handleChange","handleSubmit","errors","login","console","log","email","password","username","height","maxWidth","alignItems","width","alignSelf","UsernameIsEmpty","emailIsEmpty","emailFormatInvalid","passIsStrong","passIsEmpty","mapStateToProps","state","authReducer","apiStatusReducer","apiCallsInProgress","mapDispatchToProps","dispatch","callback"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Form, Grid, Message, Segment } from \"semantic-ui-react\";\r\nimport image from \"../../Assets/logo.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signup, signin, resetPassword } from \"../../store/actions/auth\";\r\nimport useForm from \"../../utils/useForm\";\r\nimport validate from \"../../utils/validateSignUpForm\";\r\n\r\nconst Login = ({\r\n  signup,\r\n  signin,\r\n  resetPassword,\r\n  authMsg,\r\n  history,\r\n  loading,\r\n}) => {\r\n  const [newUser, setNewUser] = useState(false);\r\n  const [reset, SetReset] = useState(false);\r\n  const [credentials, handleChange, handleSubmit, errors] = useForm(\r\n    login,\r\n    validate,\r\n    reset\r\n  );\r\n\r\n  function login() {\r\n    // signin\r\n    console.log(\r\n      credentials.email +\r\n        \" \" +\r\n        credentials.password +\r\n        \" \" +\r\n        credentials.username\r\n    );\r\n    signup(credentials.email, credentials.password, credentials.username);\r\n  }\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <Grid\r\n        textAlign=\"center\"\r\n        style={{ height: \"100vh\" }}\r\n        verticalAlign=\"middle\"\r\n      >\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <Form size=\"medium\" onSubmit={handleSubmit} noValidate>\r\n            <Segment stacked>\r\n              <div style={{ alignItems: \"center\" }}>\r\n                <img\r\n                  src={image}\r\n                  style={{ width: 130, height: 130, alignSelf: \"center\" }}\r\n                />\r\n              </div>\r\n              {authMsg && <p className=\"auth-message\">{authMsg}</p>}\r\n              <Form.Input\r\n                fluid\r\n                icon=\"user\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"Username\"\r\n                name=\"username\"\r\n                id=\"usersname\"\r\n                type=\"text\"\r\n                value={credentials.username}\r\n                onChange={handleChange}\r\n                className={errors.UsernameIsEmpty && \"input-error\"}\r\n              />\r\n              <div>\r\n                {errors.UsernameIsEmpty && (\r\n                  <small>{errors.UsernameIsEmpty}</small>\r\n                )}\r\n              </div>\r\n              <Form.Input\r\n                fluid\r\n                icon=\"envelope\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"E-mail address\"\r\n                id=\"useremail\"\r\n                value={credentials.email}\r\n                onChange={handleChange}\r\n                className={\r\n                  (errors.emailIsEmpty || errors.emailFormatInvalid) &&\r\n                  \"input-error\"\r\n                }\r\n              />\r\n              <div>\r\n                {errors.emailIsEmpty && <small>{errors.emailIsEmpty}</small>}\r\n                {errors.emailFormatInvalid && (\r\n                  <small>{errors.emailFormatInvalid}</small>\r\n                )}\r\n              </div>\r\n\r\n              {!reset && (\r\n                <div>\r\n                  <Form.Input\r\n                    fluid\r\n                    icon=\"lock\"\r\n                    iconPosition=\"left\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={credentials.password}\r\n                    type=\"password\"\r\n                    id=\"userpassword\"\r\n                    onChange={handleChange}\r\n                    className={\r\n                      (errors.passIsStrong || errors.passIsEmpty) &&\r\n                      \"input-error\"\r\n                    }\r\n                  />\r\n                  <div>\r\n                    {errors.passIsStrong && (\r\n                      <small>{errors.passIsStrong}</small>\r\n                    )}\r\n                    {errors.passIsEmpty && <small>{errors.passIsEmpty}</small>}\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              <Button fluid color=\"teal\" size=\"medium\">\r\n                Register\r\n              </Button>\r\n              <Message>\r\n                Already have an account ? <Link to=\"/login\"> Login</Link>\r\n              </Message>\r\n            </Segment>\r\n          </Form>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    authMsg: state.authReducer.authMsg,\r\n    loading: state.apiStatusReducer.apiCallsInProgress > 0,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    signup: (email, password, username) =>\r\n      dispatch(signup(email, password, username)),\r\n    signin: (email, password, callback) =>\r\n      dispatch(signin(email, password, callback)),\r\n    resetPassword: (email) => dispatch(resetPassword(email)),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n\r\n/*class SignUp extends React.Component {\r\n  state = { username: \"\", email: \"\", password: \"\", err: \"\" };\r\n\r\n  onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    const data = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n      email: this.state.email,\r\n    };\r\n\r\n    console.log(data);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Grid\r\n        textAlign=\"center\"\r\n        style={{ height: \"100vh\" }}\r\n        verticalAlign=\"middle\"\r\n      >\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <Form onSubmit={this.onFormSubmit} size=\"medium\">\r\n            <Segment stacked>\r\n              <div style={{ alignItems: \"center\" }}>\r\n                <img\r\n                  src={image}\r\n                  style={{ width: 130, height: 130, alignSelf: \"center\" }}\r\n                />\r\n              </div>\r\n              <Form.Input\r\n                fluid\r\n                icon=\"user\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"Username\"\r\n                id=\"usersname\"\r\n                onChange={(e) => this.setState({ username: e.target.value })}\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                icon=\"envelope\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"E-mail address\"\r\n                id=\"useremail\"\r\n                onChange={(e) => this.setState({ email: e.target.value })}\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                icon=\"lock\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                id=\"userpassword\"\r\n                onChange={(e) => this.setState({ password: e.target.value })}\r\n              />\r\n\r\n              <Button fluid color=\"teal\" size=\"medium\">\r\n                Register\r\n              </Button>\r\n              <Message>\r\n                Already have an account ? <Link to=\"/login\"> Login</Link>\r\n              </Message>\r\n            </Segment>\r\n          </Form>\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUp;*/\r\n"]},"metadata":{},"sourceType":"module"}