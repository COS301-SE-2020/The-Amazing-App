{"ast":null,"code":"import authReducer from \"./authReducer\";\nimport projectReducer from \"./projectReducer\";\nimport { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport { firestoreReducer } from \"redux-firestore\";\nimport { firebaseReducer } from \"react-redux-firebase\";\nimport thunk from \"redux-thunk\";\nconst initialState = {};\nconst middleware = [thunk];\nconst reducers = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\nconst store = createStore(reducers, initialState, compose(applyMiddleware(...middleware), window._REDUX_DEVTOOLS_EXTENSION_ && window._REDUX_DEVTOOLS_EXTENSION_()));\nconst rootReducer = combineReducers({});\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/User/Documents/GitHub/The-Amazing-App/web-app/src/store/reducers/rootReducer.js"],"names":["authReducer","projectReducer","createStore","combineReducers","applyMiddleware","compose","firestoreReducer","firebaseReducer","thunk","initialState","middleware","reducers","auth","project","firestore","firebase","store","window","_REDUX_DEVTOOLS_EXTENSION_","rootReducer"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,SAASC,gBAAT,QAAiC,iBAAjC;AACA,SAASC,eAAT,QAAgC,sBAAhC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,MAAMC,YAAY,GAAG,EAArB;AACA,MAAMC,UAAU,GAAG,CAACF,KAAD,CAAnB;AAEA,MAAMG,QAAQ,GAAGR,eAAe,CAAC;AAC/BS,EAAAA,IAAI,EAAEZ,WADyB;AAE/Ba,EAAAA,OAAO,EAAEZ,cAFsB;AAG/Ba,EAAAA,SAAS,EAAER,gBAHoB;AAI/BS,EAAAA,QAAQ,EAAER;AAJqB,CAAD,CAAhC;AAOA,MAAMS,KAAK,GAAGd,WAAW,CACvBS,QADuB,EAEvBF,YAFuB,EAGvBJ,OAAO,CACLD,eAAe,CAAC,GAAGM,UAAJ,CADV,EAELO,MAAM,CAACC,0BAAP,IAAqCD,MAAM,CAACC,0BAAP,EAFhC,CAHgB,CAAzB;AASA,MAAMC,WAAW,GAAGhB,eAAe,CAAC,EAAD,CAAnC;AAEA,eAAegB,WAAf","sourcesContent":["import authReducer from \"./authReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst reducers = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer,\r\n});\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window._REDUX_DEVTOOLS_EXTENSION_ && window._REDUX_DEVTOOLS_EXTENSION_()\r\n  )\r\n);\r\n\r\nconst rootReducer = combineReducers({});\r\n\r\nexport default rootReducer;\r\n"]},"metadata":{},"sourceType":"module"}