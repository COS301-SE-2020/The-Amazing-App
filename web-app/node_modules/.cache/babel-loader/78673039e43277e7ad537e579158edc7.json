{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\The-Amazing-App\\\\web-app\\\\src\\\\index.js\";\nimport React from \"react\";\nimport App from \"./Components/App\";\nimport ReactDOM from \"react-dom\";\nimport firebase from \"firebase/app\";\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunk from \"redux-thunk\";\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\nimport fbConfig from \"./Config/fbConfig\";\nimport { ReactReduxFirebaseProvider, firebaseReducer } from \"react-redux-firebase\";\nimport { createFirestoreInstance, firestoreReducer } from \"redux-firestore\";\nconst rrfConfig = {\n  userProfile: \"users\" // useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\n\n};\nconst initialState = {};\nconst store = createStore(rootReducer, initialState);\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance // <- needed if using firestore\n\n};\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }\n})), document.querySelector(\"#root\"));","map":{"version":3,"sources":["C:/Users/User/Documents/GitHub/The-Amazing-App/web-app/src/index.js"],"names":["React","App","ReactDOM","firebase","createStore","applyMiddleware","compose","combineReducers","rootReducer","Provider","createLogger","thunk","reduxFirestore","getFirestore","reactReduxFirebase","getFirebase","fbConfig","ReactReduxFirebaseProvider","firebaseReducer","createFirestoreInstance","firestoreReducer","rrfConfig","userProfile","initialState","store","rrfProps","config","dispatch","render","document","querySelector"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,EAAgDC,eAAhD,QAAuE,OAAvE;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,iBAA7C;AACA,SAASC,kBAAT,EAA6BC,WAA7B,QAAgD,sBAAhD;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SACEC,0BADF,EAEEC,eAFF,QAGO,sBAHP;AAIA,SAASC,uBAAT,EAAkCC,gBAAlC,QAA0D,iBAA1D;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,WAAW,EAAE,OADG,CAEhB;;AAFgB,CAAlB;AAKA,MAAMC,YAAY,GAAG,EAArB;AACA,MAAMC,KAAK,GAAGpB,WAAW,CAACI,WAAD,EAAce,YAAd,CAAzB;AAEA,MAAME,QAAQ,GAAG;AACftB,EAAAA,QADe;AAEfuB,EAAAA,MAAM,EAAEL,SAFO;AAGfM,EAAAA,QAAQ,EAAEH,KAAK,CAACG,QAHD;AAIfR,EAAAA,uBAJe,CAIU;;AAJV,CAAjB;AAOAjB,QAAQ,CAAC0B,MAAT,eACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEJ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIEK,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAJF","sourcesContent":["import React from \"react\";\r\nimport App from \"./Components/App\";\r\nimport ReactDOM from \"react-dom\";\r\nimport firebase from \"firebase/app\";\r\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\r\nimport rootReducer from \"./store/reducers/rootReducer\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createLogger } from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\r\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\r\nimport fbConfig from \"./Config/fbConfig\";\r\nimport {\r\n  ReactReduxFirebaseProvider,\r\n  firebaseReducer,\r\n} from \"react-redux-firebase\";\r\nimport { createFirestoreInstance, firestoreReducer } from \"redux-firestore\";\r\n\r\nconst rrfConfig = {\r\n  userProfile: \"users\",\r\n  // useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\r\n};\r\n\r\nconst initialState = {};\r\nconst store = createStore(rootReducer, initialState);\r\n\r\nconst rrfProps = {\r\n  firebase,\r\n  config: rrfConfig,\r\n  dispatch: store.dispatch,\r\n  createFirestoreInstance, // <- needed if using firestore\r\n};\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"]},"metadata":{},"sourceType":"module"}