{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\The-Amazing-App\\\\web-app\\\\src\\\\index.js\";\nimport React from \"react\";\nimport App from \"./Components/App\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\nimport fbConfig from \"Config/fbConfig\";\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk.withExtraArgument({\n  getFirebase,\n  getFirestore\n})), reactReduxFirebase(fbConfig), // redux binding for firebase\nreduxFirestore(fbConfig) // redux bindings for firestore\n));\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }\n})), document.querySelector(\"#root\"));","map":{"version":3,"sources":["C:/Users/User/Documents/GitHub/The-Amazing-App/web-app/src/index.js"],"names":["React","App","ReactDOM","createStore","applyMiddleware","rootReducer","Provider","thunk","reduxFirestore","getFirestore","reactReduxFirebase","getFirebase","fbConfig","store","compose","withExtraArgument","render","document","querySelector"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,iBAA7C;AACA,SAASC,kBAAT,EAA6BC,WAA7B,QAAgD,sBAAhD;AACA,OAAOC,QAAP,MAAqB,iBAArB;AAEA,MAAMC,KAAK,GAAGV,WAAW,CACvBE,WADuB,EAEvBS,OAAO,CACLV,eAAe,CAACG,KAAK,CAACQ,iBAAN,CAAwB;AAAEJ,EAAAA,WAAF;AAAeF,EAAAA;AAAf,CAAxB,CAAD,CADV,EAELC,kBAAkB,CAACE,QAAD,CAFb,EAEyB;AAC9BJ,cAAc,CAACI,QAAD,CAHT,CAGoB;AAHpB,CAFgB,CAAzB;AASAV,QAAQ,CAACc,MAAT,eACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEH,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIEI,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAJF","sourcesContent":["import React from \"react\";\r\nimport App from \"./Components/App\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./store/reducers/rootReducer\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\r\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\r\nimport fbConfig from \"Config/fbConfig\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  compose(\r\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\r\n    reactReduxFirebase(fbConfig), // redux binding for firebase\r\n    reduxFirestore(fbConfig) // redux bindings for firestore\r\n  )\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"]},"metadata":{},"sourceType":"module"}